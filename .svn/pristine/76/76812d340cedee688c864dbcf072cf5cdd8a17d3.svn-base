<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
	<title>The DESMO-J Tutorial :
Statistical Data Collectors
	</title>
	<link rel="stylesheet" type="text/css" href="../templates/style_blue.css" title="tutorial">
</head>

<body background="../images/background_light_lilac.gif">

<!-- Das Basis-Seitenlayout: Tabelle mit 3 Spalten und 5 Zeilen -->

<table class=table_def>
<tr>
       <td class=col_left><img src="../images/logo.gif" border="0"></td>
       <td>&nbsp;</td>
       <td class=col_right>
	   	   <H1>
Statistical Data Collectors
		   </H1>
		   <!--<p> -->
	   	   <H1>
An Extended Example
		   </H1>
		   <!-- </p> -->
		   <p>
		   <H2>
Necessary Changes to the Model Class
		   </H2>
		   </p>
	   </td>
</tr>
<tr>
       <td class=col_left>&nbsp;</td>
       <td class=colorblock>&nbsp;</td>
       <td class=row_nav>
       	<div id="navbar"><ul>
<li><a href="0.html">start</a></li><li><a href="extended0.html">prev</a></li><li><a href="extended2.html">next</a></li>
		</ul></div>
	   </td>
</tr>
<tr>
       <td class=col_left>
       		<div id="navigation"><ul>
<li><a href="../overview/0.html">The DESMO-J Tutorial</a></li>
<li><a href="../prerequisites/0.html">Prerequisites</a></li>
<li><a href="../nutshell/0.html">DESMO-J in a Nutshell</a></li>
<li><a href="../distilled/0.html">DESMO-J Distilled</a></li>
<li><a href="../at_work/0.html">DESMO-J at Work</a></li>
<li><a href="../processes/0.html">Processes Step by Step</a></li>
<li><a href="../events/0.html">Events Step by Step</a></li>
<li><a href="../distributions/0.html">Distributions</a></li>
<li><a href="0.html" id="current_top">Statistical Data Collectors</a><ol>
<li><a href="0.html">Overview</a></li>
<li><a href="1.html">General Use</a></li>
<li><a href="counter0.html">Using a Counter</a></li>
<li><a href="extended0.html" id="current_middle">An Extended Example</a><ol>
<li><a href="extended0.html">Model Description</a></li>
<li><a href="extended1.html" id="current_middle">Necessary Changes to the Model Class</a></li>
<li><a href="extended2.html">Necessary Changes to the Train and Ship Classes</a></li>
<li><a href="extended3.html">The Report</a></li>
</ol></li>
</ol></li>
<li><a href="../advanced/0.html" id="current_bottom">Advanced Modelling Features</a></li>
	   		</ul></div>
	   </td>
       <td>&nbsp;</td>
       <td class=col_right>
	   	   <p>
<p>
In the description of the implementation, we will focus on the different data collector objects and their use. To the <b>model  class</b> we have to add (i) an import statement for the <tt>desmoj.core.statistic</tt> package (if it's not already there), (ii) an attribute  each for the <tt>Tally</tt>, <tt>Accumulate</tt>, <tt>Histogram</tt> and <tt>TimeSeries</tt> objects, and (iii) their initialisation in the <tt>init()</tt> method.
</p>

<p>
To make updating the accumulate easier for the dynamic model components (the ships and trains), we will also add a new method to our model class. This method returns the total number of containers currently stored in all four storage areas.
</p>

<pre class="code">

import desmoj.core.simulator.*;
import desmoj.core.dist.*;
import desmoj.core.statistic.*;
import desmoj.core.advancedModellingFeatures.*; 
/**
 * This is the model class. It is the main class of a simple process-oriented
 * model of the railway station inside a container terminal using bins to represent
 * In addition to the two counters from the CountExample model, several other
 * data collectors are added: a tally to record the average time a trains needs to
 * wait for containers, an accumulate to calculate the mean storage load level of the
 * four storage areas, a time series to log the storage load level of the Northern
 * Europe dedicated storage area, and a histogram to record a distribution
 * of ship sizes.
 */
public class CountExample extends Model {
   
   // define model attributes:
   // distributions
   ...
   // bins
   ...
   // data collectors
   ...

   /** NEW: a tally to record the average time a train has to wait */
   protected Tally trainWaitTime;

   /** NEW: an accumulate to calculate the mean storage load level of all
    *  four storage areas
    */
   protected Accumulate storageLoadLevel;

   /** NEW: a time series to log the storage load level of the Northern
    *  Europe dedicated storage area
    */
   protected TimeSeries loadLevelNorth;

   /** NEW: a histogram to record the distribution of ship sizes */
   protected Histogram shipSize;

   // constructor
   ...

   /**
    * initialises static model components like distributions and queues.
    */
   public void init() {
      // initialise distributions
      ...
      // initialise the bins (storage areas)
      ...

      // initialise the data collectors 
      ...
      // NEW: the tally
      trainWaitTime = new Tally(this, "train wait time", true, false);

      // NEW: the accumulate
      storageLoadLevel = new Accumulate(this, "storage load level", true, false);

      // NEW: the histogram
      shipSize = new Histogram(this, "ship size", 200, 1400, 10, true, false);

      // NEW: the time series
      loadLevelNorth = new TimeSeries(this, "load level for Northern Europe",
                                      "StatisticsExample_LoadLevelNorth.txt", 
                                      new TimeInstant(0.0), new TimeInstant(500.0), true, false);
   }

   // additional required methods
   ...

   /** This method is used by the model components to receive the current
    *  load level of all four storage areas combined, in order to be able
    *  to update the accumulate.
    *  @return long
    */
   protected long getCurrentStorageLoad() {
      return (east.getAvail() + north.getAvail() + central.getAvail() 
                                                   + germany.getAvail());
   }
}

</pre>
<br /><br />
		   </p>
	   </td>
</tr>
<tr>
       <td class=col_left>&nbsp;</td>
       <td  class=colorblock>&nbsp;</td>
       <td class=row_nav>
       	<div id="navbar"><ul>
<li><a href="0.html">start</a></li><li><a href="extended0.html">prev</a></li><li><a href="extended2.html">next</a></li>
		</ul></div>
	   </td>
</tr>
<tr>
       <td class=col_left><div id="navigation">&nbsp;</div></td>
       <td>&nbsp;</td>
       <td class=row_url>
http://desmoj.sourceforge.net/tutorial/statistics/extended1.html
	   </td>
</tr>
</table>

</body>
</html>
